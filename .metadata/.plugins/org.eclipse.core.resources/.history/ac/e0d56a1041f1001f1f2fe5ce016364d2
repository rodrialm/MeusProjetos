package proativa.projeto.visao;

import java.util.List;
import java.util.Map;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;
import proativa.projeto.modelo.Controlador;
import proativa.projeto.modelo.ControladorCarregamento;

public class Aplicacao extends Application {

	private Stage primaryStage;
	private Parent raiz;
//	private Parent carregamento;
	private String arquivosCSS;
	private Stage janela;
	private Scene cenaNaTela;
//	private Scene cenaCarregamento;

	@Override
	public void start(Stage primaryStage) throws Exception {
		this.primaryStage = primaryStage;
		carregarCenaCarregamento();
	}

	public void carregarCenaPrincipal() throws Exception{
	
			arquivosCSS = getClass().getResource("Layout.css").toExternalForm();
			FXMLLoader loader = new FXMLLoader(getClass().getResource("proativa.fxml"));
			raiz = loader.load();
			
			// faz o controlador setar a pagina para que for chamada
			Controlador controlador = loader.getController();
			controlador.setMainApp(this);

			janela = primaryStage;

			cenaNaTela = new Scene(raiz, 900, 600);
			cenaNaTela.getStylesheets().add(arquivosCSS);

//		primaryStage.setMaximized(true);;
			janela.setTitle(".:: LEITOR EXCEL ::.");
			janela.setScene(cenaNaTela);
			janela.show();
		
	}
	public void carregarCenaCarregamento() throws Exception{

		arquivosCSS = getClass().getResource("LayoutCarregamento.css").toExternalForm();
		FXMLLoader loader = new FXMLLoader(getClass().getResource("carregamento.fxml"));
		raiz = loader.load();
		
		// faz o controlador setar a pagina para que for chamada
		ControladorCarregamento controlador = loader.getController();
		controlador.setMainApp(this);
		
		TableView<Map<String, String>> tabela = (TableView<Map<String, String>>) loader.getNamespace().get("tabela");
        TableColumn<Map<String, String>, String> coluna1 = (TableColumn<Map<String, String>, String>) loader.getNamespace().get("coluna1");
        TableColumn<Map<String, String>, String> coluna2 = (TableColumn<Map<String, String>, String>) loader.getNamespace().get("coluna2");
        TableColumn<Map<String, String>, String> coluna3 = (TableColumn<Map<String, String>, String>) loader.getNamespace().get("coluna3");

        // Configura as colunas
        coluna1.setCellValueFactory(new PropertyValueFactory<>("Coluna1"));
        coluna2.setCellValueFactory(new PropertyValueFactory<>("Coluna2"));
        coluna3.setCellValueFactory(new PropertyValueFactory<>("Coluna3"));

        // Popula a TableView com os dados filtrados
//        List<Map<String, String>> dadosFiltrados = getFilteredDataFromExcel(); // MÃ©todo que retorna os dados filtrados
        tabela.getItems().addAll(dadosFiltrados);

		janela = primaryStage;

		cenaNaTela = new Scene(raiz, 900, 600);
		cenaNaTela.getStylesheets().add(arquivosCSS);

	    // Configura a janela principal
	    primaryStage.setTitle(".:: RESULTADO ::.");
	    primaryStage.setScene(cenaNaTela);
	    primaryStage.show();
		
////		arquivosCSS = getClass().getResource("LayoutCarregamento.css").toExternalForm();
////		
//		FXMLLoader loader = new FXMLLoader(getClass().getResource("carregamento.fxml"));
//		Parent raiz = loader.load();
//		ControladorCarregamento controlador = loader.getController();
//		controlador.setMainApp(this);
////		
////		janela = primaryStage;
////		
////		janela.setTitle("Proativa");
////		janela.setScene(cenaPrincipal);
////		
//		Scene cenaResultado = new Scene(raiz, 900, 600);
////		cenaPrincipal.getStylesheets().add(arquivosCSS);
//		
////		primaryStage.setMaximized(true);;
//		janela.setTitle(".::RESULTADO::.");
//		janela.setScene(cenaResultado);
//		janela.show();
		
	}
	
	

	public static void main(String[] args) {
		launch(args);
	}
}
