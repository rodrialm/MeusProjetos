package proativa.projeto.modelo;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import javafx.event.ActionEvent;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

public class Arquivo {

	private String nomeArquivo;
	File arquivoSelecionado;

	public Arquivo() {

	}

	public Arquivo(ActionEvent event) throws Exception {
		buscarArquivo(event);
	}

	public void buscarArquivo(ActionEvent event) {

		try {
			FileChooser selecionarArquivo = new FileChooser();
			selecionarArquivo.setTitle("Selecionar Arquivo Excel");
			selecionarArquivo.getExtensionFilters()
					.addAll(new FileChooser.ExtensionFilter("Arquivos Excel", "*.xls", "*.xlsx"));
			Stage stage = (Stage) ((javafx.scene.Node) event.getSource()).getScene().getWindow();
			arquivoSelecionado = selecionarArquivo.showOpenDialog(stage);
			nomeArquivo = arquivoSelecionado.getName();
				
			if (arquivoSelecionado != null) {
				try {
					String nomeArquivo = arquivoSelecionado.getName();
					if (nomeArquivo.endsWith(".xls") || nomeArquivo.endsWith(".xlsx")) {

					} else {
						nomeArquivo = "Formato invalido";
					}
				} catch (Exception e) {
					System.out.println(e.getMessage());
				}
			}

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
	}

	public void lerArquivo() {
		try(FileInputStream arquivo = new FileInputStream(arquivoSelecionado)){
			Workbook workbook;
			
			if(nomeArquivo.endsWith(".xlsx")) {
				workbook =  new XSSFWorkbook(arquivo);
			} else {
				workbook =  new HSSFWorkbook(arquivo);
				
			}
			
			
			 Sheet sheet = workbook.getSheetAt(0);
			 
			 for(Row linha: sheet) {
				 
				 for (Cell celula : linha) {
					 
					 switch (celula.getCellType()) {
					 
					 case STRING:
						 System.out.print(celula.getStringCellValue() + "\t");
						 break;
					 
					 case NUMERIC:
						 System.out.print(celula.getNumericCellValue() + "\t");
						 break;
					 
					 case BOOLEAN:
						 System.out.print(celula.getBooleanCellValue() + "\t");
						 break;
					
					 case FORMULA:
						 System.out.print(celula.getCellFormula() + "\t");
						 break;
						 
					default:
						System.out.print("Desconhecido \t");
						
					 }
				 }
				 System.out.println();
			 }
			 
			 workbook.close();
			
		}catch (IOException e) {
			e.printStackTrace();
		}
		
	}

	public String getNome() {
		if (nomeArquivo != null) {
			return nomeArquivo;
		} else {
			return "Arquivo n√£o selecionado!";
		}
	}
}
